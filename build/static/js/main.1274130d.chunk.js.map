{"version":3,"sources":["customhook/useInput.js","pages/home/Form.js","store/action/noteAction.js","components/notes/Note.js","components/notes/notesList.js","pages/home/Home.js","pages/partials/Navbar.js","pages/favorites/index.js","pages/noteDetails/index.js","pages/editNote/index.js","App.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["useInput","initialValue","useState","value","setValue","reset","bind","onChange","e","target","Form","title","bindTitle","resetTitle","content","bindContent","resetContent","dispatch","useDispatch","className","onSubmit","note","preventDefault","getState","getFirestore","collection","add","favorite","createdAt","Date","then","console","log","catch","err","id","type","htmlFor","Note","heartMark","style","cursor","onClick","favoriteStatus","doc","update","error","toggleFavorite","delete","deleteNote","to","moment","toDate","fromNow","payload","NotesList","notes","map","Home","useFirestoreConnect","orderBy","useSelector","state","firestore","ordered","NavBar","FavoritePage","where","storeAs","favornotes","NoteDetails","props","match","params","data","isLoaded","isEmpty","calendar","EditNote","history","useHistory","updateNote","push","App","exact","path","component","Favorites","initialState","note_to_edit","noteReducer","rootReducer","combineReducers","firestoreReducer","firebase","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbConfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1274130d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\n\nconst useInput = (initialValue = \"\") => {\n  const [value, setValue] = useState(initialValue);\n  const reset = () => {\n    setValue(initialValue);\n  };\n  const bind = {\n    value,\n    onChange: (e) => {\n      setValue(e.target.value);\n    },\n  };\n  return [value, bind, reset];\n};\n\n\nexport default useInput;\n","import React from 'react'\nimport useInput from '../../customhook/useInput'\nimport { addNote } from '../../store/action/noteAction'\nimport { useDispatch } from \"react-redux\";\n\nconst Form = () => {\n    const [title, bindTitle, resetTitle] = useInput(\"\");\n    const [content, bindContent, resetContent] = useInput(\"\");\n    const dispatch = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addNote({ title, content }))\n        resetTitle()\n        resetContent()\n    }\n    return (\n        <div className=\"section\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">New Note</h5>\n                <div className=\"input-field \">\n                    <input id=\"first_name\" type=\"text\" className=\"validate\" {...bindTitle} />\n                    <label htmlFor=\"note_title\">Note Title</label>\n                </div>\n                <div className=\"input-field\">\n                    <textarea id=\"textarea1\" className=\"materialize-textarea\" {...bindContent}></textarea>\n                    <label htmlFor=\"textarea1\">Note Content</label>\n                </div>\n                <button className=\"btn green\">Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form\n","export const addNote = (note) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore\n      .collection(\"notes\")\n      .add({\n        ...note,\n        favorite: false,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        console.log(\"the note has been added successfully\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const deleteNote = (note) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore\n      .collection(\"notes\")\n      .doc(note.id)\n      .delete()\n      .then(() => {\n        console.log(\"the note has been deleted successfully\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const toggleFavorite = (note) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const favoriteStatus = !note.favorite;\n    const firestore = getFirestore();\n    firestore .collection(\"notes\").doc(note.id).update({\n        favorite: favoriteStatus\n    }).then(()=>{\n        console.log('success');\n    }).catch((error)=>{\n        console.log(error);\n    })\n  };\n};\n\nexport const updateNote = (note) => {\n    return (dispatch, getState, { getFirestore }) => {\n      const firestore = getFirestore();\n      firestore .collection(\"notes\").doc(note.id).update({\n          title: note.title,\n          content:note.content\n          }).then(()=>{\n          console.log('success');\n      }).catch((error)=>{\n          console.log(error);\n      })\n    };\n  };\n  \n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport \"./note.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteNote, toggleFavorite } from \"../../store/action/noteAction\";\n\nconst Note = ({ note }) => {\n  const dispatch = useDispatch();\n\n  const deleteHandler = () => {\n    dispatch(deleteNote(note));\n  };\n  const toogleFav = () => {\n    dispatch(toggleFavorite(note));\n  };\n  const editNoteHandler = () => {\n    dispatch({ type: \"EDIT_NOTE\", payload: note });\n  };\n  //a const to change the heart color depending on the user action when click on the heart icon to add a note to his favrite or the opposite\n  const heartMark = note.favorite ? \"favorite\" : \"favorite_border\";\n\n  return (\n    <div className=\"note white\">\n      <div className=\"right-align\">\n        <i\n          className=\"material-icons red-text\"\n          style={{ cursor: \"pointer\" }}\n          onClick={toogleFav}\n        >\n          {heartMark}\n        </i>\n        <i\n          className=\"material-icons \"\n          style={{ cursor: \"pointer\" }}\n          onClick={deleteHandler}\n        >\n          delete\n        </i>\n      </div>\n      <Link to={\"/note/\" + note.id}>\n        <h5 className=\"black-text\">{note.title}</h5>\n      </Link>\n      <p className=\"truncate\">{note.content}</p>\n      <p className=\"grey-text\"> {moment(note.createdAt.toDate()).fromNow()} </p>\n      <div className=\"right-align\">\n        <Link to={\"/editnote/\" + note.id}>\n          <i\n            className=\"material-icons \"\n            style={{ cursor: \"pointer\" }}\n            onClick={editNoteHandler}\n          >\n            edit\n          </i>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Note;\n","import React from 'react';\nimport Note from './Note';\nimport './note.css'\n\nconst NotesList =({notes})=>{\n    return(\n        <div className=\"noteslist\">\n        {notes && notes.map(note => <Note note={note} key={note.id}/>)}\n        </div>\n    )\n}\nexport default NotesList;","\nimport React from 'react'\nimport Form from './Form'\nimport NotesList from '../../components/notes/notesList'\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\n\nconst Home = () => {\n    useFirestoreConnect([{ collection: 'notes', orderBy: ['createdAt', 'desc'] }])\n    const notes = useSelector((state) => state.firestore.ordered.notes);\n    return (\n        <div className=\"container \">\n            <div className=\"row center-align\">\n                <div className=\"col s7\"><Form /></div>\n                <div className=\"col s5\"><NotesList notes={notes} /></div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\"\n\nconst NavBar = () => {\n  return (\n    <nav  className=\"green\">\n      <div className=\"nav-wrapper\">\n        <Link to=\"/\" className=\"brand-logo\">\n          NoteBook\n        </Link>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <NavLink to=\"/favorites\">Favorites</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport NotesList from '../../components/notes/notesList'\n\nexport const FavoritePage = () => {\n  useFirestoreConnect([\n    {\n      collection: \"notes\",\n      where: [\"favorite\", \"==\", true],\n      orderBy: [\"createdAt\", \"desc\"],\n      storeAs: \"favornotes\",\n    },\n  ]);\n  const favornotes = useSelector((state)=> state.firestore.ordered.favornotes)\n  console.log(favornotes);\n\n  return(\n      <>\n       <NotesList notes={favornotes}/>   \n      </>\n  )\n};\n\n\nexport default FavoritePage;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect, isLoaded, isEmpty } from \"react-redux-firebase\";\nimport moment from \"moment\";\n\nconst NoteDetails = (props) => {\n  const id = props.match.params.id;\n  useFirestoreConnect([{ collection: \"notes\", doc: id }]);\n  const note = useSelector(\n    ({ firestore: { data } }) => data.notes && data.notes[id]\n  );\n\n  const noteMarkup = !isLoaded(note) ? (\n    <div className=\"container section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"> loading...</span>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\"></div>\n      </div>\n    </div>\n  ) : isEmpty(note) ? (\n    <div className=\"container section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"> the note content is empty </span>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\"></div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"container section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\"> {note.title} </span>\n          <p> {note.content} </p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          {moment(note.createdAt.toDate()).calendar()}\n        </div>\n      </div>\n    </div>\n  );\n  return noteMarkup;\n};\n\nexport default NoteDetails;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { updateNote } from \"../../store/action/noteAction\";\nimport useInput from \"../../customhook/useInput\";\n\nconst EditNote = (props) => {\n  const note = useSelector((state) => state.note);\n  console.log(note);\n\n  const [title, bindTitle, resetTitle] = useInput(note.title);\n  const [content, bindContent, resetContent] = useInput(note.content);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateNote({ id: note.id, title, content }));\n    resetTitle();\n    resetContent();\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"section\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">New Note</h5>\n        <div className=\"input-field \">\n          <input\n            id=\"first_name\"\n            type=\"text\"\n            className=\"validate\"\n            {...bindTitle}\n          />\n          <label htmlFor=\"note_title\" className=\"active\">\n            Note Title\n          </label>\n        </div>\n        <div className=\"input-field\">\n          <textarea\n            id=\"textarea1\"\n            className=\"materialize-textarea\"\n            {...bindContent}\n          ></textarea>\n          <label htmlFor=\"textarea1\" className=\"active\">\n            Note Content\n          </label>\n        </div>\n        <button className=\"btn green\">update</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditNote;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home/Home\";\nimport NavBar from \"./pages/partials/Navbar\";\nimport Favorites from \"./pages/favorites\"\nimport NoteDetails from './pages/noteDetails'\nimport EditNote  from './pages/editNote' \n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path='/favorites' component={Favorites}/>\n        <Route exact path=\"/note/:id\" component={NoteDetails}/>\n        <Route exact path=\"/editnote/:id\" component={EditNote}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\n  note_to_edit: {},\n};\n\nconst noteReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"EDIT_NOTE\":\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;\n","import { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport noteReducer from \"./noteReducer\";\n\nconst rootReducer = combineReducers({\n  note: noteReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAMq4kGGThHv54NBvlpCKy4oUdBhW3ZPBM\",\n  authDomain: \"evernote-clone-7e3b6.firebaseapp.com\",\n  projectId: \"evernote-clone-7e3b6\",\n  storageBucket: \"evernote-clone-7e3b6.appspot.com\",\n  messagingSenderId: \"671610221708\",\n  appId: \"1:671610221708:web:98734846f9b39f971fb7a9\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n} from \"react-redux-firebase\";\nimport fbConfig from './config/fbconfig'\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n\n);\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}